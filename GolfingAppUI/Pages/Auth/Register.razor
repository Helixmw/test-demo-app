@page "/register"
@layout Shared.MainLayout
@using GolfingDataAccessLib.DTOs.User
@using GolfingDataAccessLib.Exceptions
@using GolfingDataAccessLib.Logic.Auth
@using Microsoft.AspNetCore.Components.Forms
@using GolfingAppUI.Models
@inject IUserProcessor userProcessor
@inject NavigationManager navigationManager


<div class="register">
    <div class="box left">
        <div class="title">
            Start Your Golfing Journey
        </div>
    </div>
    <div class="box right">
    <div class="sm-title">Register</div>
    <EditForm Model="@user" OnValidSubmit="RegisterNewUser">
         <DataAnnotationsValidator />
        <ValidationSummary />
    <div class="form-group">
        <div class="label">Username</div>
        <InputText class="form-control" @bind-Value="user.Username"/>
    </div>
    <div class="form-group">
        <div class="label">Email</div>
        <InputText class="form-control" @bind-Value="user.Email"/>
    </div>
    <div class="form-group">
        <div class="label">Password</div>
        <InputText type="password" class="form-control" @bind-Value="user.Password"/>
    </div>
    <div class="form-group">
        <div class="label">Confirm Password</div>
        <InputText type="password" class="form-control" @bind-Value="user.ConfirmPassword"/>
    </div>
    <button type="submit" class="form-button">Register</button>
    </EditForm>

    <div class="error">
    @ErrorMessage
    </div>
  </div>
</div>
<style scoped>
    .register{display: grid;
    margin:6rem 3rem;
    grid-template-columns: repeat(2,1fr)}
    .heading{
   }
    .container-1{
        margin-top:5rem;}
    .title{
        font-family:var(--h1);
        font-size: var(--xl);
        color:var(primary);
         max-width:30rem;
         color:var(--primary);
    }

    .title::after{
        content: ' Here!';
        color:var(--blue2);
    }

    /*Form*/

    .sm-title{
        font-family: var(--h2);
        color:var(--primary);
        font-size:1.8rem;
        margin-bottom: 0.7rem;
    }

    .label{
  font-family:var(--h3);
  font-size:1rem;
}

.form-control{
  font-size:1rem;
  width:15rem;
  border:1px solid black;
  border-radius:4px;
}

.form-button{
  border:0px;
  background-color: var(--primary);
  color:white;
  font-family: var(--h3);
  font-size:1.4rem;
  padding:0.3rem 0.6rem;
  border-radius: 4px;
  margin-top: 0.5rem;
}
    /*----*/
</style>
@code{
    private RegisterUser user { get; set; } = new();

    private string ErrorMessage { get; set; } = string.Empty;

    private async Task RegisterNewUser(){
        try{
        if(user is not null)
        await userProcessor.SignUpAsync(
            new SignUpDTO{
                UserName = user.Username,
                Password = user.Password,
                Email = user.Email
            });
        navigationManager.NavigateTo("/Login");
        }catch(AuthorizationException ex){
            await ShowErrorMessage(ex.Message);
        }
        
    }

    private async Task ShowErrorMessage(string message){
        ErrorMessage = message;
        StateHasChanged();
        await Task.Delay(3000);
        ErrorMessage = string.Empty;
        StateHasChanged();
    }  
}    

